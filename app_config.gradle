if (isDebug.toBoolean() && name.matches("module_.+") ||
        name.matches("app")) {
    apply plugin: "com.android.application"
} else {
    apply plugin: "com.android.library"
}
apply plugin: "kotlin-android"
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

Properties p = new Properties()
p.load(new File("$rootDir/key.properties").newDataInputStream())

android {
    /*splits {
        abi {
            enable true
            reset()
            include "arm64-v8a",'x86', 'armeabi-v7a', 'x86_64', "armeabi"
            universalApk true
        }
    }*/
    compileSdk Android.CompileSdk
    //默认配置选项
    defaultConfig {
        if (isDebug.toBoolean() && name.matches("module_.+") || name.matches("app")) {
            applicationId "com.example.miaozhi"
        }

        signingConfigs {

            debug{
                keyAlias = p["miaoZhikeyAlias"]
                keyPassword = p["miaoZhikeyPassword"]
                storePassword = p["miaoZhikeyPassword"]
                storeFile = file("$rootDir/MiaoZhi.jks")
            }

        }

        minSdk Android.DefaultConfig.MinSdk
        targetSdk Android.DefaultConfig.TargetSdk
        versionCode Android.DefaultConfig.VersionCode
        versionName Android.DefaultConfig.VersionName
        ndk {
            //机智云没有64为的so,不能直接使用
            abiFilters "armeabi"/*, "arm64-v8a"*/
        }
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    //Manifest位置
    sourceSets {
        main {
            //if (name.matches("lib_common")){
            jniLibs.srcDirs = ['libs']
            //}
            if (name.matches("module_.+") && isDebug.toBoolean()) {
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            }
            //main.manifest.srcFile 'src/main/module/AndroidManifest.xml'
        }
        /*java{
            exclude "debug/**"
        }*/
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility Android.CompileOptions.SourceCompatibility
        targetCompatibility Android.CompileOptions.TargetCompatibility
    }
    kotlinOptions {
        jvmTarget = Android.KotlinOptions.JvmTarget
    }

    buildFeatures {
        viewBinding true
    }
}

dependencies {
    //基础库
    implementation baseDependency
    kapt kaptDependency
    annotationProcessor annotationDependency
    testImplementation testDependency.junit
    androidTestImplementation testDependency.androidJunit
    androidTestImplementation testDependency.espresso
    //module基础依赖包
    if (name.matches("module_.+") || name.matches("app")) {
        //基础包
        implementation project(":lib_common")
        implementation project(":lib_base")
    }
}